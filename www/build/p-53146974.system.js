System.register([],(function(t){"use strict";return{execute:function(){const e={getEngine(){const t=window;return t.TapticEngine||t.Capacitor&&t.Capacitor.isPluginAvailable("Haptics")&&t.Capacitor.Plugins.Haptics},available(){return!!this.getEngine()},isCordova(){return!!window.TapticEngine},isCapacitor(){const t=window;return!!t.Capacitor},impact(t){const e=this.getEngine();if(!e){return}const i=this.isCapacitor()?t.style.toUpperCase():t.style;e.impact({style:i})},notification(t){const e=this.getEngine();if(!e){return}const i=this.isCapacitor()?t.style.toUpperCase():t.style;e.notification({style:i})},selection(){this.impact({style:"light"})},selectionStart(){const t=this.getEngine();if(!t){return}if(this.isCapacitor()){t.selectionStart()}else{t.gestureSelectionStart()}},selectionChanged(){const t=this.getEngine();if(!t){return}if(this.isCapacitor()){t.selectionChanged()}else{t.gestureSelectionChanged()}},selectionEnd(){const t=this.getEngine();if(!t){return}if(this.isCapacitor()){t.selectionEnd()}else{t.gestureSelectionEnd()}}};const i=t("d",()=>{e.selection()});const n=t("a",()=>{e.selectionStart()});const s=t("b",()=>{e.selectionChanged()});const c=t("h",()=>{e.selectionEnd()});const o=t("c",t=>{e.impact(t)})}}}));