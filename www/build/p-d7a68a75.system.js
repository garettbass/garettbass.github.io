System.register([],(function(e){"use strict";return{execute:function(){const t=e("KEYBOARD_DID_OPEN","ionKeyboardDidShow");const s=e("KEYBOARD_DID_CLOSE","ionKeyboardDidHide");const o=150;let i={};let n={};let a=false;const r=e("resetKeyboardAssist",()=>{i={};n={};a=false});const d=e("startKeyboardAssist",e=>{c(e);if(!e.visualViewport){return}n=w(e.visualViewport);e.visualViewport.onresize=()=>{b(e);if(p()||l(e)){h(e)}else if(g(e)){f(e)}}});const c=e=>{e.addEventListener("keyboardDidShow",t=>h(e,t));e.addEventListener("keyboardDidHide",()=>f(e))};const h=e("setKeyboardOpen",(e,t)=>{u(e,t);a=true});const f=e("setKeyboardClose",e=>{y(e);a=false});const p=e("keyboardDidOpen",()=>{const e=(i.height-n.height)*n.scale;return!a&&i.width===n.width&&e>o});const l=e("keyboardDidResize",e=>a&&!g(e));const g=e("keyboardDidClose",e=>a&&n.height===e.innerHeight);const u=(e,s)=>{const o=s?s.keyboardHeight:e.innerHeight-n.height;const i=new CustomEvent(t,{detail:{keyboardHeight:o}});e.dispatchEvent(i)};const y=e=>{const t=new CustomEvent(s);e.dispatchEvent(t)};const b=e("trackViewportChanges",e=>{i=Object.assign({},n);n=w(e.visualViewport)});const w=e("copyVisualViewport",e=>({width:Math.round(e.width),height:Math.round(e.height),offsetTop:e.offsetTop,offsetLeft:e.offsetLeft,pageTop:e.pageTop,pageLeft:e.pageLeft,scale:e.scale}))}}}));